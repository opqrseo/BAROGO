<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="edu.multi.kdigital.dao.UserMapper">
    
    <!-- 회원가입 -->
    <insert id="insertmember" parameterType="UserDto">
        INSERT INTO user VALUES (#{userId}, #{userPw}, #{userName},#{userEmail})
    </insert>
    
    	<!-- 로그인 -->
	<select id="loginCheck" resultType="String">
		select * from `user` where userId=#{userId} and userPw=#{userPw};
	</select>
	
	<!-- 회원정보 상세조회 -->
	<select id="memberView" resultType="UserDto" parameterType="String">
		select *
		from `user`
		where userId=#{userId}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="memberUpdate" parameterType="UserDto">
		update `user`
		set
		userName=#{userName}, userEmail=#{userEmail}
		where userId=#{userId}
	</update>

	<!-- 회원정보 삭제 -->
	<delete id="memberDelete" parameterType="String">
		delete from `user`
		where userId=#{userId}
	</delete>
	
	<!-- 비밀번호 체크 -->
	<select id="passChk" resultType="int">
		select count(*)
		from `user`
		where userId=#{userId} and userPw=#{userPw}
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="checkId" resultType="int">
		select count(*)
		from `user`
		where userId=#{userId}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="checkEmail" resultType="int">
		select count(*)
		from user
		where userEmail=#{userEmail}
	</select>
	
		<!-- 로그인시 아이디와 비밀번호 확인 -->
	<select id="loginUser" resultType="UserDto">
		select * from `user` where userId=#{userId} and userPw=#{userPw}
	</select>
		<!-- 아이디 찾기 -->
	<select id="findId" resultType="UserDto">
		select * from `user` where userName=#{userName} and userEmail=#{userEmail}
	</select>
		<!-- 비밀번호 찾기 -->
	<select id="findPassword" resultType="UserDto">
		select * from `user` where userId=#{userId} and userName=#{userName} and userEmail=#{userEmail}
	</select>
		<!-- 비밀번호 변경 -->
	<update id="updatePassword">
		update `user` set userPw=#{userPw} where userId=#{userId}
	</update>
	
			<!-- 수정시 비밀번호 찾기 -->
	<select id="updatefindPassword" resultType="UserDto">
		select * from `user` where userId=#{userId} and userPw=#{userPw}
	</select>
	


	
	
</mapper>